# -*- coding: utf-8 -*-
"""spotify_recommendation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Roshnijaiswar/9f5d0c43e0cc5496dc12e3805630b016/spotify_recommendation.ipynb
"""

!pip install spotipy

import spotipy
from spotipy.oauth2 import SpotifyOAuth
import os

# Define cache path
cache_path = '.spotify_cache'

# Ensure the cache directory exists
if not os.path.exists(cache_path):
    os.makedirs(cache_path)

# Step 1: Set up Spotify authentication
sp_oauth = SpotifyOAuth(client_id="12cb0fbbeded472480e5daaea2227a00",
                        client_secret="9664760e49b143369b11bc36f928bf74",
                        redirect_uri="https://music.org/recommender",  # This must match exactly with your Spotify app settings
                        cache_path=os.path.join(cache_path, ".cache"))

# Step 2: Get the authorization URL
auth_url = sp_oauth.get_authorize_url()
print(f"Please go to the following URL and authorize access:\n{auth_url}")

# Step 3: Prompt user to enter the URL they were redirected to
redirected_url = input("Enter the URL you were redirected to: ")

# Step 4: Parse the authorization code from the redirected URL
code = sp_oauth.parse_response_code(redirected_url)

# Step 5: Get the access token
token_info = sp_oauth.get_access_token(code)
access_token = token_info['access_token']

# Step 6: Set up the Spotify client with the access token
sp = spotipy.Spotify(auth=access_token)

# Step 7: Collect user input
user_input = input("Enter your favorite artist, song, or genre: ")

try:
    # Step 8: Retrieve data based on user input
    results = sp.search(q=user_input, limit=1, type='track')
    if not results['tracks']['items']:
        print("No results found.")
    else:
        track_id = results['tracks']['items'][0]['id']

        # Step 9: Get recommendations based on the track
        recommendations = sp.recommendations(seed_tracks=[track_id], limit=10)

        # Step 10: Display recommended songs
        print("Recommended Songs:")
        for track in recommendations['tracks']:
            print(f"{track['name']} by {track['artists'][0]['name']}")
except spotipy.exceptions.SpotifyException as e:
    print(f"Spotify API error: {e}")
except Exception as e:
    print(f"An unexpected error occurred: {e}")

import spotipy
from spotipy.oauth2 import SpotifyOAuth
import os

# Define cache path
cache_path = '.spotify_cache'

# Ensure the cache directory exists
if not os.path.exists(cache_path):
    os.makedirs(cache_path)

# Step 1: Set up Spotify authentication
sp_oauth = SpotifyOAuth(client_id="12cb0fbbeded472480e5daaea2227a00",
                        client_secret="9664760e49b143369b11bc36f928bf74",
                        redirect_uri="https://music.org/recommender",  # This must match exactly with your Spotify app settings
                        cache_path=os.path.join(cache_path, ".cache"))

# Step 2: Get the authorization URL
auth_url = sp_oauth.get_authorize_url()
print(f"Please go to the following URL and authorize access:\n{auth_url}")

# Step 3: Prompt user to enter the URL they were redirected to
redirected_url = input("Enter the URL you were redirected to: ")

# Step 4: Parse the authorization code from the redirected URL
code = sp_oauth.parse_response_code(redirected_url)

# Step 5: Get the access token
token_info = sp_oauth.get_access_token(code)
access_token = token_info['access_token']

# Step 6: Set up the Spotify client with the access token
sp = spotipy.Spotify(auth=access_token)

# Step 7: Collect user input
user_input = input("Enter your favorite artist, song, or genre: ")

try:
    # Step 8: Retrieve data based on user input
    results = sp.search(q=user_input, limit=1, type='track')
    if not results['tracks']['items']:
        print("No results found.")
    else:
        track_id = results['tracks']['items'][0]['id']

        # Step 9: Get recommendations based on the track
        recommendations = sp.recommendations(seed_tracks=[track_id], limit=10)

        # Step 10: Display recommended songs
        print("Recommended Songs:")
        for track in recommendations['tracks']:
            print(f"{track['name']} by {track['artists'][0]['name']}")
except spotipy.exceptions.SpotifyException as e:
    print(f"Spotify API error: {e}")
except Exception as e:
    print(f"An unexpected error occurred: {e}")

user_input = input("Enter your favorite artist, song, or genre: ")